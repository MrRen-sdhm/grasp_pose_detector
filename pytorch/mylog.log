Have 80 total testing examples
cuda:0
Loading data ...
Net(
  (conv1): Conv2d(15, 20, kernel_size=(5, 5), stride=(1, 1))
  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (conv2): Conv2d(20, 50, kernel_size=(5, 5), stride=(1, 1))
  (fc1): Linear(in_features=7200, out_features=500, bias=True)
  (fc2): Linear(in_features=500, out_features=2, bias=True)
)
Copying network to GPU ...
Loaded data
Testing the network on the test data ...
torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



torch.Size([60, 60, 15])
torch.Size([15, 60, 60])



inputs_shape: torch.Size([16, 15, 60, 60])
outputs.data: tensor([[-2.4109,  2.3610],
        [-1.0015,  0.9731],
        [ 0.5474, -0.5544],
        [ 0.9258, -0.9270],
        [ 1.4770, -1.4703],
        [ 3.3989, -3.3656],
        [ 0.5474, -0.5544],
        [-0.5679,  0.5441],
        [-3.0314,  2.9724],
        [ 2.1328, -2.1173],
        [ 0.7525, -0.7560],
        [ 2.1260, -2.1087],
        [ 2.3983, -2.3787],
        [ 1.3219, -1.3186],
        [ 0.7525, -0.7560],
        [-0.9630,  0.9341]], device='cuda:0')
predicted: tensor([1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], device='cuda:0')
correct: 6
total: 16
Accuracy of the network on the test set: 37.500%
